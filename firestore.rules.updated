rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow public read access to usernames collection for username availability checks
    match /usernames/{username} {
      allow read: if true; // Allow anyone to check if username exists
      allow write: if request.auth != null; // Allow authenticated users to claim usernames
    }
    
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read and write their own creator profile
    match /creators/{username} {
      allow read: if true; // Public read access for creator profiles
      allow write: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == request.resource.data.userId);
    }
    
    // Users can read and write their own uploads
    match /uploads/{uploadId} {
      allow read: if true; // Public read access
      allow write: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == request.resource.data.userId);
    }
    
    // Users can read and write their own product boxes
    match /productBoxes/{boxId} {
      allow read: if true; // Public read access
      allow write: if request.auth != null && 
        (request.auth.uid == resource.data.creatorId || 
         request.auth.uid == request.resource.data.creatorId);
    }
    
    // Free content is publicly readable
    match /freeContent/{contentId} {
      allow read: if true;
      allow write: if request.auth != null && 
        (request.auth.uid == resource.data.creatorId || 
         request.auth.uid == request.resource.data.creatorId);
    }
    
    // User purchases
    match /purchases/{purchaseId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == request.resource.data.userId);
    }
    
    // User favorites
    match /users/{userId}/favorites/{favoriteId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // User history
    match /users/{userId}/history/{historyId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow all authenticated users to read and write to any document (temporary for debugging)
    // NOTE: This rule makes all the above rules redundant for authenticated users
    // Consider removing this rule when going to production
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}
